[tool.poetry]
name = "pyposeidon"
version = "0.6.0"
description = "Framework for Sea Level Hydrodynamic simulations"
authors = [
    "George Breyiannis <breyiannis@gmail.com>",
    "Panos Mavrogiorgos <pmav99@gmail.com>"
]
readme = "README.md"
homepage = "https://github.com/ec-jrc/pyposeidon"
keywords = [
    "Hydrodynamic",
    "Sea",
    "Simulation",
    "Visualization",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Science/Research",
    'License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)',
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    'Topic :: Scientific/Engineering :: Atmospheric Science',
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Hydrology",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries",
]

[tool.poetry.dependencies]
# python = ">=3.10, <3.11"
python = ">=3.9, <4"
setuptools = "*"
Cartopy = "*"
cfgrib = "*"
colorlog = "*"
dask = "*"
f90nml = "*"
geopandas = "*"
gmsh = "*"
jinja2 = "*"
joblib = "*"
llvmlite = "*"
netCDF4 = "*"
numpy = ">=1.20, <2.0"
pandas = "<2"
psutil = "*"
pydap = ">=3.4.0"
pyresample = "*"
rasterio = "*"
requests = "*"
rioxarray = "*"
scipy = "*"
searvey = "*"
Shapely = ">=2"
#Shapely = { url = "https://github.com/shapely/shapely/archive/refs/tags/1.7.1.zip" }
tqdm = "*"
xarray = "*"
# viz
geoviews = { version = "*", optional = true, extras = ['recommended'] }
holoviews = { version = "*", optional = true }
hvplot = { version = "*", optional = true }
ipykernel = { version = "*", optional = true }
itkwidgets = { version = "*", optional = true }
matplotlib = { version = "*", optional = true }
mayavi = { version = "*", optional = true }
numba = { version = ">=0.51", optional = true }
spatialpandas = { version = "*", optional = true }
vtk = {version = "*", optional = true}

[tool.poetry.extras]
viz = [
    "geoviews",
    "holoviews",
    "hvplot",
    "ipykernel",
    "itkwidgets",
    "matplotlib",
    "mayavi",
    "numba",
    "spatialpandas",
    "vtk",
]

[tool.poetry.group.dev.dependencies]
black = "<24.0"
bump2version = "^1.0"
"ruamel.yaml" = "<1.0"
"ruamel.yaml.clib" = "0.2.7"

[tool.poetry.group.test.dependencies]
pytest-cov = "*"
pytest = "*"
pytest-xdist = "*"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "*"
mkdocstrings = "*"
mkdocs = "*"
pymdown-extensions = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
#addopts = "-ra --verbose --showlocals --tb=short --cov=pyposeidon --cov-report term-missing"
addopts = "-ra --verbose --showlocals --tb=short"
testpaths = [
    "tests",
]
filterwarnings = [
    'ignore:`np.*` is a deprecated alias for .* `np.*`.*:DeprecationWarning',
    'ignore:distutils Version classes are deprecated. Use packaging.version instead:DeprecationWarning',
    "ignore:Using or importing the ABCs from 'collections' instead of from 'collections.abc':DeprecationWarning",
    "ignore:A private pytest class or function was used.:pytest.PytestDeprecationWarning"
]
markers = [
    "schism: mark a test as a Schism based test. Needs --runschism to run",
    "delft: mark a test as a Delft3D based test. Needs --rundelft to run",
    "slow: mark a test as a slow one. Needs --runslow to run",
    "viz: mark a test as a viz one. Needs --runviz to run",
    "runlast: mark a test as one that should be run at the end of the test suite",
]

[tool.black]
line-length = 119
target-version = ['py39']
